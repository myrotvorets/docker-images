name: Build

on:
  push:
  workflow_dispatch:
  schedule:
    - cron: "0 3 * * *"

jobs:
  prepare:
    name: Get images to build
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generator.outputs.matrix }}
    steps:
      - name: Check out the source code
        uses: actions/checkout@v2.3.5

      - name: Prepare the list of the images
        run: |
          touch built_images.txt
          for i in */; do
            if [ -f "${i}Dockerfile" ]; then
              echo "${i%/}" >> built_images.txt
            fi
          done

      - name: Generate matrix
        id: generator
        run: |
          echo ::set-output name=matrix::$(cat built_images.txt | jq --slurp --raw-input 'split("\n")[:-1] | { "image": . }')

  build:
    needs: prepare
    name: Build images
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix: ${{ fromJson(needs.prepare.outputs.matrix) }}
    steps:
      - name: Check out the source code
        uses: actions/checkout@v2.3.5

      - name: Run hadolint
        uses: hadolint/hadolint-action@v1.6.0
        with:
          dockerfile: "${{ matrix.image }}/Dockerfile"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1.6.0

      - name: Build Docker image
        uses: docker/build-push-action@v2.7.0
        with:
          context: ${{ matrix.image }}
          load: true
          pull: true
          push: false
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: "myrotvorets/${{ matrix.image }}:${{ github.sha }},myrotvorets/${{ matrix.image }}:latest"

      - name: Security Scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "myrotvorets/${{ matrix.image }}:${{ github.sha }}"
          format: template
          template: "@/contrib/sarif.tpl"
          output: trivy-results.sarif

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: trivy-results.sarif

      - name: Login to DockerHub
        uses: docker/login-action@v1.10.0
        with:
          username: ${{ secrets.DOCKER_LOGIN }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        if: github.event_name != 'push' || github.ref == 'refs/heads/master'

      - name: Push the image
        run: |
          docker push "myrotvorets/${{ matrix.image }}:${{ github.sha }}"
          docker push "myrotvorets/${{ matrix.image }}:latest"
        if: ${{ github.event_name != 'push' || github.ref == 'refs/heads/master' }}
